Требования:
Уверенное знание Python
Опыт работы с Django
Высшее техническое образование
Уверенное владение Python 3 (Junior / Middle)
Понимание Front-end разработки, опыт разработки REST API
Опыт разработки на Flask
Опыт работы с PostgreSQL, DB2, MySQL, MariaDB
Уверенное владение команд Linux систем, команд GIT
Знание Docker, Docker Compose
Хорошое знание ООП
Знаешь или тыкал PyTelegramBotApi или другие библиотеки для работы с Telegram
Знание Trello и Scrum
MongoDB/ElasticSearch, aiohttp/django, RabbitMQ;
Знание алгоритмов и структур данных
Базовые знания сетей и виртуализации
Навыки писать и читать логи
Технический стек: Django Rest Framework, Fastapi, Pydantic
Хороших знаний JavaScript/TypeScript и опыта разработки PWA на React.js или Angular/Vue
Понимания Web технологий
Платформа: Debian, nginx, uWSGI
Умение писать тесты с использованием RSpec
От 1-го года коммерческой разработки (Sinatra/RoR)
Базовое знание HTML+CSS+JS
Gitlab
 · Node.js · Высоконагруженные системы · FireBase
Знание языка С#
Опыт работы с Service mesh / service discovery системами;
Высшее или неполное высшее техническое/математическое образование (бакалавриат и/ или магистратура)
Опыт продуктовой/коммерческой разработки на Python + Django от 1 года (в том числе pet-проекты), а также большое желание изучать новые инструменты
Работа с API, понимание REST, опыт разработки, тестирования и документирования API (swagger, postman или альтернативы)
Навык настройки и администрирования unix систем: нужно уметь развернуть боевую версию веб-приложения, настроить необходимые сервисы, окружение, логгирование, домен, защиту от DDoS и случайного доступа
Понимание асинхронности, в т.ч. в Django
Умение работать с Jira
Умение читать техническую документацию на английском языке





Рекомендации:
Знаешь, что такое Flask, Tornado, Celery, Django Rest Framework, и умеешь с ними работать
Опыт участия в высоконагруженных проектах
Опыт работы c трекерами задач (JIRA, Redmine и прочее)
Хорошое знание Jenkins и/или Docker
Работал в команде более 7 человек
Знаком с технологиями: RabbitMQ, Redis, Ansible, unittest, doctest, mock
Уверенное владение Linux систем
Опыт настройки Nginx
Знание основ unit-тестирования
Знание SQL и опыт работы с базами данных
Опыт работы или интеграции с React приложениями
Опыт работы с контейнерами
Опыт работы с FastApi или другими инструментами для создания веб-сервисов на Python; готовность осваивать новые инструменты и применять по ситуации
Знания в области обеспечения безопасности серверов



Что такое cookies?
Как использовать паттерны программирования?
Как писать unit-тесты?
Что такое Acceptance Testing и зачем он нужен?
В чем различие между хешированием и шифрованием?
Что такое модульные тесты, API-тесты?
Что такое модель памяти Python?
Что такое расширение 1 к 1 b abstract user?
Что такое debug toolbar?
Что делает библиотека sort-thumbnail?
Что такое choices=(ITEM_RARITY_CHOICEES, ITEM_TYPE_CHOICES), которые используются для моделей?
Какакя сложность операциий в коллекциях?
Что такое связь many to many?
Что такое django lazy loading?



Python 3.6+
Знание сетевых протоколов HTTP, WebSocket;
asyncio, multiprocessing, multitheading
PyQT/алгоритмы, сортировка, парсинг
работа по методологиям Agile|Lean
Django(DRF)/Flask/FastAPi(RestAPI)/ClickHouse
Docker/AWS/Azure/Heroku
Pytest/Unittest/flake8
Redis/PostgreSQL/MongoDB/MySQL/SQLAlchemy
ElasticSearch
NativeJs/ReactJs
Css/Html
NGINX/Apache
Kafka//RabbitMQ
Kubernetes
SOLID, DRY, KISS
Язык программирования Go(Дополнительно)















